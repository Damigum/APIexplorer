require('dotenv').config();
const axios = require('axios');

const GROQ_API_KEY = process.env.GROQ_API_KEY;
const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';

async function callGroqApi(messages) {
  try {
    const response = await axios.post(
      GROQ_API_URL,
      {
        model: "llama-3.1-70b-versatile",
        messages: messages,
        max_tokens: 4000,
        temperature: 0.1
      },
      {
        headers: {
          'Authorization': `Bearer ${GROQ_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    return response.data.choices[0].message.content;
  } catch (error) {
    console.error('Error calling Groq API:', error);
    if (error.response) {
      console.error('Response data:', error.response.data);
      console.error('Response status:', error.response.status);
    }
    throw error;
  }
}

// Example usage (commented out for now)
/*
async function exampleUsage() {
  const messages = [
    { role: "system", content: "You are a helpful assistant." },
    { role: "user", content: "Hello, how are you?" }
  ];

  try {
    const result = await callGroqApi(messages);
    console.log('AI response:', result);
  } catch (error) {
    console.error('Failed to get AI response:', error);
  }
}

exampleUsage();
*/

module.exports = {
  callGroqApi
};